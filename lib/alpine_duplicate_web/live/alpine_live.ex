defmodule AlpineDuplicateWeb.AlpineLive do
  use AlpineDuplicateWeb, :live_view

  def render(assigns) do
    ~H"""
    <div
      id="alpine-live"
      phx-update="ignore"
      x-data="{
        addEvent(text) {
          const el = document.createElement('li')
          el.innerHTML = text + ' at ' + new Date().getMilliseconds()
          $refs.clicks.appendChild(el)
        }
      }"
      x-init="addEvent('x-init')"
    >
      <button @click="addEvent('@click')">Click me!</button>
      <h2>Events:</h2>
      <ul x-ref="clicks"></ul>
    </div>
    <br/>

    <ul>
      <li>@click (full page load): one event generated by button</li>
      <li>@click (live redirect): two events generated by button</li>
      <li>x-init (full page load): called twice with slight delay</li>
      <li>x-init (live redirect): called twice with nearly no delay</li>
    </ul>
    """
  end
end
